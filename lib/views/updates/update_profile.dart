import 'dart:io';

import 'package:animated_text_kit/animated_text_kit.dart';
import 'package:chatting/data_sources/app_colors.dart';
import 'package:chatting/data_sources/themes/themes.dart';
import 'package:chatting/models/users/users.dart';
import 'package:chatting/view_models/profile/profile_service.dart';
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';

List<Color> colorListText = [
  AppColors.blue60,
  AppColors.red60,
  AppColors.green60,
  AppColors.violet60,
  AppColors.blue60,
  AppColors.red60,
  AppColors.green60,
  AppColors.violet60,
  AppColors.blue60,
  AppColors.red60,
  AppColors.green60,
  AppColors.violet60,
];

class UpdateProfile extends StatefulWidget {
  const UpdateProfile({super.key});

  @override
  State<UpdateProfile> createState() => _UpdateProfileState();
}

class _UpdateProfileState extends State<UpdateProfile> {
  final ProfileService updateProfile = ProfileService();
  late File image;
  final ImagePicker picker = ImagePicker();
  String? imageUrl; // L∆∞u tr·ªØ URL c·ªßa ·∫£nh
  late Users users;
  bool isLoading = false;

  @override
  void initState() {
    users = Users();
    super.initState();
    _loadData();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.transparent,
      body: Container(
        width: MediaQuery.of(context).size.width,
        clipBehavior: Clip.hardEdge,
        decoration: BoxDecoration(
          color: RiveAppTheme.background,
          borderRadius: BorderRadius.circular(30),
        ),
        child: Padding(
          padding: EdgeInsets.only(
              top: MediaQuery.of(context).padding.top,
              bottom: MediaQuery.of(context).padding.bottom),
          child: SizedBox(
            height: MediaQuery.of(context).size.height,
            width: MediaQuery.of(context).size.width,
            child: Stack(
              children: [
                // background name
                Container(
                  padding:
                      const EdgeInsets.symmetric(horizontal: 20, vertical: 90),
                  width: double.infinity,
                  height: 310,
                  decoration: const BoxDecoration(
                      color: Colors.black,
                      borderRadius:
                          BorderRadius.only(bottomRight: Radius.circular(230))),
                  child: SizedBox(
                    width: 250.0,
                    child: DefaultTextStyle(
                      style: const TextStyle(
                        fontSize: 30.0,
                        fontFamily: 'Canterbury',
                      ),
                      child: AnimatedTextKit(
                        animatedTexts: [
                          TypewriterAnimatedText('Xin Ch√†o, ',
                              textStyle: const TextStyle(fontSize: 40)),
                          TypewriterAnimatedText(
                              'B·∫°n c√≥ t·ª´ng nghƒ© ƒë√¢y l√† ·ª©ng d·ª•ng tuy·ªát v·ªùi kh√¥ng ?'),
                          TypewriterAnimatedText(
                              'N·∫øu b·∫°n nghƒ© l√† c√≥ th√¨ b·∫°n ƒë√∫ng r·ªìi ƒë√≥ !!!'),
                          TypewriterAnimatedText(
                              'Tr·∫£i nghi·ªám ·ª©ng d·ª•ng v√† n√™u √Ω ki·∫øn g√≥c ph·∫£i nh√© !!!'),
                        ],
                      ),
                    ),
                  ),
                ),

                // info
                Positioned(
                  top: 240,
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Stack(children: [
                        Container(
                          decoration: BoxDecoration(
                              color: AppColors.blue30,
                              border:
                                  Border.all(width: 5, color: AppColors.blue30),
                              borderRadius: BorderRadius.circular(55)),
                          child: CircleAvatar(
                            backgroundColor: AppColors.grey10,
                            backgroundImage: imageUrl !=
                                    null // Ki·ªÉm tra n·∫øu c√≥ URL
                                ? NetworkImage(imageUrl!) // Hi·ªÉn th·ªã ·∫£nh t·ª´ URL
                                : null, // Kh√¥ng c√≥ ·∫£nh, hi·ªÉn th·ªã ·∫£nh m·∫∑c ƒë·ªãnh
                            radius: 50,
                          ),
                        ),
                        Positioned(
                          bottom: 0,
                          right: 0,
                          child: Container(
                            decoration: BoxDecoration(
                              color: AppColors.grey30,
                              borderRadius: BorderRadius.circular(50),
                            ),
                            child: IconButton(
                                onPressed: pickImage,
                                icon: const Icon(
                                  Icons.camera_alt,
                                  color: AppColors.grey50,
                                  size: 25,
                                )),
                          ),
                        ),
                      ]),
                      const SizedBox(width: 20),
                      isLoading
                          ? const CircularProgressIndicator() // Hi·ªÉn th·ªã khi ƒëang t·∫£i
                          : AnimatedTextKit(
                              animatedTexts: [
                                ColorizeAnimatedText(
                                  users.name.isNotEmpty
                                      ? users.name
                                      : "No Name",
                                  textStyle: const TextStyle(
                                    fontSize: 35.0,
                                    fontWeight: FontWeight.w900,
                                  ),
                                  colors: colorListText,
                                ),
                              ],
                              repeatForever: true,
                            ),
                      isLoading
                          ? const CircularProgressIndicator() // Hi·ªÉn th·ªã khi ƒëang t·∫£i
                          : Text(
                              "üì© : ${users.name.isNotEmpty ? users.email : "No email"}",
                              style: TextStyle(
                                  color: AppColors.dark.withOpacity(1),
                                  fontSize: 20,
                                  fontFamily: "Inter",
                                  fontWeight: FontWeight.w400),
                              maxLines: 1,
                            ),
                      const SizedBox(height: 10),
                      SizedBox(
                        width: MediaQuery.of(context).size.width,
                        child: const Padding(
                          padding: EdgeInsets.symmetric(horizontal: 20),
                          child: Divider(
                            thickness: 2,
                            color: AppColors.grey70,
                          ),
                        ),
                      ),
                      if (users.friends != null &&
                          users.friends!.isNotEmpty) ...[
                        const SingleChildScrollView() // TODO : x·ª≠ l√Ω ch·ªó n√†y
                      ] else
                        ...[]
                    ],
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  // loadData
  _loadData() async {
    setState(() {
      isLoading = true;
    });

    try {
      String? url = await updateProfile.getURLAvatar();
      Users? user = await updateProfile.getUsers();
      setState(() {
        imageUrl = url;
        if (user != null) {
          users = user;
        }
        isLoading = false; // K·∫øt th√∫c t·∫£i
        print(users.friends);
      });
    } catch (e) {
      setState(() {
        isLoading = false; // Ng·ª´ng t·∫£i n·∫øu g·∫∑p l·ªói
      });
      rethrow;
    }
  }

  // Ch·ªçn ·∫£nh trong thi·∫øt b·ªã
  Future<void> pickImage() async {
    try {
      final XFile? pickerFile =
          await picker.pickImage(source: ImageSource.gallery);
      if (pickerFile != null) {
        setState(() {
          image = File(pickerFile.path);
        });
        // Upload avatar v√† l·∫•y URL t·ª´ Firebase Storage
        updateProfile.updateAvatar(image);

        String? url = await updateProfile.getURLAvatar();
        setState(() {
          imageUrl = url;
        });
      }
    } catch (e) {
      rethrow;
    }
  }
}
